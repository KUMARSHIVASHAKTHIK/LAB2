import numpy as np
import pandas as pd

df = pd.read_csv("smaller_adult.csv")
df.head()

df.columns

df.shape

df.info()

df.describe()

df.isin(['?']).sum()

df.columns

df['workclass'] = df['workclass'].replace('?', np.nan)
df['occupation'] = df['occupation'].replace('?', np.nan)

df.isin(['?']).sum()

df.isnull().sum()

df.dropna(how='any', inplace=True)

print(f"There are {df.duplicated().sum()} duplicate values")

df = df.drop_duplicates()
df.shape

df.columns

X = df.loc[:,['age', 'workclass', 'educational-num', 'occupation', 'gender', 'hours-per-week']]
y = df.loc[:,'income']

from sklearn.preprocessing import LabelEncoder
y = LabelEncoder().fit_transform(y)
y = pd.DataFrame(y)
y.head()

numeric_features = X.select_dtypes('number')
categorical_features = X.select_dtypes('object')
categorical_features

numeric_features

converted_categorical_features = pd.get_dummies(categorical_features)
converted_categorical_features.shape

all_features = [converted_categorical_features, numeric_features]
newX = pd.concat(all_features,axis=1, join='inner')
newX.shape

newX.columns

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(newX, y, test_size=0.33, random_state=42)


from sklearn.svm import SVC
clf = SVC(kernel="linear", gamma = 'auto')
clf.fit(X_train, y_train.values.ravel())

y_pred = clf.predict(X_test)


from sklearn.metrics import accuracy_score
print(accuracy_score(y_pred,y_test))